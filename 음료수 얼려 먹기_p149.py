def dfs(i,j,MAP):
    MAP[i][j] = 3
    if j < len(MAP[i])-1:
        if MAP[i][j+1] == 0:
            dfs(i,j+1,MAP)
    if j > 1:
        if MAP[i][j-1] == 0:
            dfs(i,j-1,MAP)
    if i < len(MAP)-1:
        if MAP[i+1][j] == 0:
            dfs(i+1,j,MAP)
    if i > 1:
        if MAP[i-1][j] == 0:
            dfs(i-1,j,MAP)
    return 1

def solution(N,M,MAP):
    answer = 0
    for i in range(N):
        for j in range(M):
            if MAP[i][j] == 0:
                answer += dfs(i,j,MAP)
                #print(MAP)
                #print()
    # print(MAP)
    return answer

# N = 4
# M = 5
# MAP = [[0,0,1,1,0],[0,0,0,1,1],[1,1,1,1,1],[0,0,0,0,0]]
#print(solution(N,M,MAP))

N = 15
M = 14
MAP = [ [0,0,0,0,0,1,1,1,1,0,0,0,0,0],
        [1,1,1,1,1,1,0,1,1,1,1,1,1,0],
        [1,1,0,1,1,1,0,1,1,0,1,1,1,0],
        [1,1,0,1,1,1,0,1,1,0,0,0,0,0],
        [1,1,0,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,0,1,1,1,1,1,1,1,1,1,0,0],
        [1,1,0,0,0,0,0,0,0,1,1,1,1,1],
        [0,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [0,0,0,0,0,0,0,0,0,1,1,1,1,1],
        [0,1,1,1,1,1,1,1,1,1,1,0,0,0],
        [0,0,0,1,1,1,1,1,1,1,1,0,0,0],
        [0,0,0,0,0,0,0,1,1,1,1,0,0,0],
        [1,1,1,1,1,1,1,1,1,1,0,0,1,1],
        [1,1,1,0,0,0,1,1,1,1,1,1,1,1],
        [1,1,1,0,0,0,1,1,1,1,1,1,1,1]
        ]
print(solution(N,M,MAP))